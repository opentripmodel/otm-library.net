name: OTM Package Pipeline

# shared env for all jobs
env:
  DOTNET_SKIP_FIRST_TIME_EXPERIENCE: 1
  DOTNET_NOLOGO:                     true
  NUGET_OUTPUT:                      ${{ github.workspace }}/nuget

permissions:
  contents: read
  packages: write

on:
  workflow_dispatch: # Allow running the workflow manually from the GitHub UI
  push:
#    branches:
#      - main # build & pack on every push to main


jobs:
  build_pack:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Setup .NET 8
        uses: actions/setup-dotnet@v4
        with:
          dotnet-version: 8.0.x

      - name: Restore & Build
        run:  |
              dotnet build src/Otm.Model/Otm.Model.csproj -c Release

      - name: Pack
        run:  |
              dotnet pack src/Otm.Model/Otm.Model.csproj -c Release -o ${{ env.NUGET_OUTPUT }}

      - name: Upload Package Artifact
        uses: actions/upload-artifact@v4
        with:
          name: nuget
          path: ${{ env.NUGET_OUTPUT }}/*.nupkg


  deploy:
    runs-on: ubuntu-latest
    needs:   build_pack
    # if:      github.event_name == 'release'  # only run on GitHub “Release” events (which are triggered via the UI)

    steps:
      - name: Download Package Artifact
        uses: actions/download-artifact@v4
        with:
          name: nuget
          path: ${{ env.NUGET_OUTPUT }}

      - name: Setup .NET 8
        uses: actions/setup-dotnet@v4
        with:
          dotnet-version: 8.0.x

      - name: Publish to GitHub Packages
        run:  |
              for pkg in ${{ env.NUGET_OUTPUT }}/*.nupkg; do
                dotnet nuget push "$pkg" \
                  --source https://api.nuget.org/v3/index.json \
                  --api-key ${{ secrets.NUGET_APIKEY }} \
                  --skip-duplicate
              done
              
